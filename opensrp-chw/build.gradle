buildscript {
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.2.2'
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.8.3'
        classpath 'com.google.gms:google-services:4.3.3'
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.3.0'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'
apply from: "jacoco.gradle"
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'

jacoco {
    toolVersion = "0.8.5"
}

android {
    useLibrary 'org.apache.http.legacy'
    compileSdk 33
    //    buildToolsVersion androidBuildToolsVersion

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    bundle {
        language {
            // Specifies that the app bundle should not support
            // configuration APKs for language resources. These
            // resources are instead packaged with each base and
            // dynamic feature APK.
            enableSplit = false
        }
    }

    defaultConfig {
        applicationId "org.smartregister.chw"
        minSdkVersion androidMinSdkVersion
        targetSdkVersion androidTargetSdkVersion
        versionCode 1
        versionName "0.2.0"
        multiDexEnabled true
        buildConfigField "long", "MAX_SERVER_TIME_DIFFERENCE", "1800000l"
        buildConfigField "boolean", "TIME_CHECK", "false"
        buildConfigField "String", "SYNC_TYPE", '"teamId"'
        buildConfigField "int", "MAX_SYNC_RETRIES", '3'
        buildConfigField "long", "BUILD_TIMESTAMP", System.currentTimeMillis() + "L"
        buildConfigField "boolean", "IS_SYNC_SETTINGS", "false"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "String[]", "ALLOWED_LOCATION_LEVELS", '{"Facility Name", "Village"}'
        buildConfigField "String", 'DEFAULT_LOCATION', '"Village"'
        buildConfigField "boolean", 'SUPPORT_QR', 'true'
        buildConfigField "int", "DATABASE_VERSION", '12'

        buildConfigField "String", 'opensrp_url', '"https://afyatek.smartregister.org/opensrp/"'
        buildConfigField "String", 'opensrp_url_debug', '"https://opensrp-dev.d-tree.org/opensrp/"'
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }

    buildTypes {
        releaseTraining {
            minifyEnabled false
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "int", "OPENMRS_UNIQUE_ID_INITIAL_BATCH_SIZE", '500'
            buildConfigField "int", "OPENMRS_UNIQUE_ID_BATCH_SIZE", '500'
            buildConfigField "int", "OPENMRS_UNIQUE_ID_SOURCE", '1'
            buildConfigField "boolean", "TIME_CHECK", "true"
            buildConfigField "int", "DATA_SYNC_DURATION_MINUTES", '15'
            buildConfigField "int", "VACCINE_SYNC_PROCESSING_MINUTES", '30'
            buildConfigField "int", "IMAGE_UPLOAD_MINUTES", '180'
            buildConfigField "int", "PULL_UNIQUE_IDS_MINUTES", '180'
            buildConfigField "int", "HOME_VISIT_MINUTES", '60'
            buildConfigField "int", "REPORT_INDICATOR_GENERATION_MINUTES", '120'
            buildConfigField "int", "BASE_PNC_CLOSE_MINUTES", '1440'
            buildConfigField "int", "SCHEDULE_SERVICE_MINUTES", '720'
            buildConfigField("String", "SIMPRINT_PROJECT_ID", ' "fUBnpzDdbsCsMp0egCHB" ')
            buildConfigField("String", "SIMPRINT_PRODUCTION_PROJECT_ID", ' "8rlGBhsk6371eW2KLZm6" ')
            buildConfigField("String", "SIMPRINT_USER_ID", ' "global_user" ')
            buildConfigField("String", "SIMPRINT_OPENSRP_MODULE_ID", ' "global_module" ')
            buildConfigField "String", 'opensrp_url', '"https://opensrp-dev.d-tree.org/opensrp/"'
            buildConfigField "String", 'guidebooks_url', '"https://opensrp.s3.amazonaws.com/media/ba/"'
            buildConfigField "String", 'opensrp_url_debug', '"https://opensrp-dev.d-tree.org/opensrp/"'
        }
        release {
            minifyEnabled false
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "int", "OPENMRS_UNIQUE_ID_INITIAL_BATCH_SIZE", '500'
            buildConfigField "int", "OPENMRS_UNIQUE_ID_BATCH_SIZE", '500'
            buildConfigField "int", "OPENMRS_UNIQUE_ID_SOURCE", '3'
            buildConfigField "boolean", "TIME_CHECK", "true"
            buildConfigField "int", "DATA_SYNC_DURATION_MINUTES", '15'
            buildConfigField "int", "VACCINE_SYNC_PROCESSING_MINUTES", '30'
            buildConfigField "int", "IMAGE_UPLOAD_MINUTES", '180'
            buildConfigField "int", "PULL_UNIQUE_IDS_MINUTES", '180'
            buildConfigField "int", "HOME_VISIT_MINUTES", '60'
            buildConfigField "int", "REPORT_INDICATOR_GENERATION_MINUTES", '120'
            buildConfigField "int", "BASE_PNC_CLOSE_MINUTES", '1440'
            buildConfigField "int", "SCHEDULE_SERVICE_MINUTES", '720'
            buildConfigField("String", "SIMPRINT_PROJECT_ID", ' "8rlGBhsk6371eW2KLZm6" ')
            buildConfigField("String", "SIMPRINT_PRODUCTION_PROJECT_ID", ' "8rlGBhsk6371eW2KLZm6" ')
            buildConfigField("String", "SIMPRINT_USER_ID", ' "global_user" ')
            buildConfigField("String", "SIMPRINT_OPENSRP_MODULE_ID", ' "global_module" ')
        }

        debug {
            buildConfigField "int", "OPENMRS_UNIQUE_ID_INITIAL_BATCH_SIZE", '30'
            buildConfigField "int", "OPENMRS_UNIQUE_ID_BATCH_SIZE", '15'
            buildConfigField "int", "OPENMRS_UNIQUE_ID_SOURCE", '1'
            buildConfigField "boolean", "TIME_CHECK", "false"
            buildConfigField "int", "DATA_SYNC_DURATION_MINUTES", '15'
            buildConfigField "int", "VACCINE_SYNC_PROCESSING_MINUTES", '30'
            buildConfigField "int", "IMAGE_UPLOAD_MINUTES", '15'
            buildConfigField "int", "PULL_UNIQUE_IDS_MINUTES", '15'
            buildConfigField "int", "HOME_VISIT_MINUTES", '60'
            buildConfigField "int", "REPORT_INDICATOR_GENERATION_MINUTES", '120'
            buildConfigField "int", "BASE_PNC_CLOSE_MINUTES", '1440'
            buildConfigField "int", "SCHEDULE_SERVICE_MINUTES", '360'
            buildConfigField("String", "SIMPRINT_PROJECT_ID", ' "fUBnpzDdbsCsMp0egCHB" ')
            buildConfigField("String", "SIMPRINT_PRODUCTION_PROJECT_ID", ' "8rlGBhsk6371eW2KLZm6" ')
            buildConfigField("String", "SIMPRINT_USER_ID", ' "global_user" ')
            buildConfigField("String", "SIMPRINT_OPENSRP_MODULE_ID", ' "global_module" ')
            testCoverageEnabled false
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'LICENSE.txt'

    }

    testOptions {
        unitTests {
            returnDefaultValues = true
            includeAndroidResources = true
        }
        unitTests.all {
            systemProperty 'robolectric.enabledSdks', '28'
            jvmArgs '-noverify'
        }
    }

    configurations.all {
        resolutionStrategy {
            force 'androidx.appcompat:appcompat:1.0.2'
            force 'com.google.android.material:material:1.0.0'
        }
    }

    flavorDimensions 'baseDimension'
    productFlavors {
        at {
            dimension = 'baseDimension'
            applicationIdSuffix ".at"
            versionCode 26
            versionName "1.9.8"
            buildConfigField "String", 'opensrp_url', '"https://afyatek.smartregister.org/opensrp/"'
            buildConfigField "String", 'guidebooks_url', '"https://opensrp.s3.amazonaws.com/media/ba/"'
            buildConfigField "String", 'opensrp_url_debug', '"https://opensrp-dev.d-tree.org/opensrp/"'
            buildConfigField "String[]", "LOCATION_HIERACHY", '{"Country", "Region", "District", "Ward" ,"Village", "Facility Name"}'
            buildConfigField "int", "OPENMRS_UNIQUE_ID_SOURCE", '3'
            buildConfigField "String[]", "ALLOWED_LOCATION_LEVELS", '{"Facility Name", "Village"}'
            buildConfigField "String[]", "ALLOWED_LOCATION_LEVELS_DEBUG", '{"Facility Name", "Village"}'
            buildConfigField "String", 'DEFAULT_LOCATION', '"Village"'
            buildConfigField "String", 'DEFAULT_LOCATION_DEBUG', '"Village"'
            buildConfigField "boolean", 'SUPPORT_QR', 'true'
            buildConfigField "boolean", 'SUPPORT_REPORT', 'false'
            buildConfigField "int", "DATABASE_VERSION", '12'
            buildConfigField("String", "SIMPRINT_PROJECT_ID", ' "8rlGBhsk6371eW2KLZm6" ')
            buildConfigField("String", "SIMPRINT_PRODUCTION_PROJECT_ID", ' "8rlGBhsk6371eW2KLZm6" ')
            buildConfigField("String", "SIMPRINT_USER_ID", ' "global_user" ')
            buildConfigField("String", "SIMPRINT_OPENSRP_MODULE_ID", ' "global_module" ')
        }
        ba {
            dimension = 'baseDimension'
            applicationIdSuffix ".ba"
            versionCode 2
            versionName "1.0.2"
            buildConfigField "String", 'opensrp_url', '"https://boresha-afya.smartregister.org/opensrp/"'
            buildConfigField "String", 'guidebooks_url', '"https://opensrp.s3.amazonaws.com/media/ba/"'
            buildConfigField "String", 'opensrp_url_debug', '"https://boresha-afya-stage.smartregister.org/opensrp/"'
            buildConfigField "String[]", "LOCATION_HIERACHY", '{"Country","Region","District","Ward" , "Health Facility", "Village", "Village Sublocations"}'
            buildConfigField "String[]", "ALLOWED_LOCATION_LEVELS", '{"Ward" , "Health Facility", "Village", "Village Sublocations"}'
            buildConfigField "String[]", "ALLOWED_LOCATION_LEVELS_DEBUG", '{"MOH Jhpiego Facility Name" , "Village"}'
            buildConfigField "String", 'DEFAULT_LOCATION', '"Village Sublocations"'
            buildConfigField "String", 'DEFAULT_LOCATION_DEBUG', '"Village"'
            buildConfigField "boolean", 'SUPPORT_QR', 'true'
            buildConfigField "boolean", 'SUPPORT_REPORT', 'false'
            buildConfigField "int", "DATABASE_VERSION", '13'
        }
    }

    dataBinding {
        enabled = true
    }
    buildToolsVersion = '29.0.2'

    sourceSets {
        main.java.srcDirs += 'src/main/org/smartregister/chw>'
    }

}

def githubProperties = new Properties()
githubProperties.load(new FileInputStream(rootProject.file("github.properties")))

repositories {
    maven {
        name = "GitHubPackages"
        url = uri("https://maven.pkg.github.com/d-tree-org/opensrp-client-core")
        credentials {
            username = githubProperties['gpr.usr'] ?: System.getenv("GPR_USER")
            password = githubProperties['gpr.key'] ?: System.getenv("GPR_API_KEY")
        }
    }
    maven {
        name = "GitHubPackages"
        url = uri("https://maven.pkg.github.com/d-tree-org/opensrp-client-simprints")
        credentials {
            username = githubProperties['gpr.usr'] ?: System.getenv("GPR_USER")
            password = githubProperties['gpr.key'] ?: System.getenv("GPR_API_KEY")
        }
    }
    maven {
        name = "GitHubPackages"
        url = uri("https://maven.pkg.github.com/d-tree-org/opensrp-client-family")
        credentials {
            username = githubProperties['gpr.usr'] ?: System.getenv("GPR_USER")
            password = githubProperties['gpr.key'] ?: System.getenv("GPR_API_KEY")
        }
    }
    maven {
        name = "GitHubPackages"
        url = uri("https://maven.pkg.github.com/d-tree-org/opensrp-client-native-form")
        credentials {
            username = githubProperties['gpr.usr'] ?: System.getenv("GPR_USER")
            password = githubProperties['gpr.key'] ?: System.getenv("GPR_API_KEY")
        }
    }

    maven {
        name = "GitHubPackages"
        url = uri("https://maven.pkg.github.com/d-tree-org/opensrp-client-chw-core")
        credentials {
            username = githubProperties['gpr.usr'] ?: System.getenv("GPR_USER")
            password = githubProperties['gpr.key'] ?: System.getenv("GPR_API_KEY")
        }
    }

    maven {
        name = "GitHubPackages"
        url = uri("https://maven.pkg.github.com/d-tree-org/opensrp-client-chw-anc")
        credentials {
            username = githubProperties['gpr.usr'] ?: System.getenv("GPR_USER")
            password = githubProperties['gpr.key'] ?: System.getenv("GPR_API_KEY")
        }
    }
}

dependencies {
    implementation('org.smartregister:opensrp-client-chw-core:1.1.39-DTREE-31-SNAPSHOT@aar') {
        transitive = true
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'androidx.legacy', module: 'legacy-support-v4'
        exclude group: 'androidx.appcompat', module: 'appcompat'
        exclude group: 'androidx.constraintlayout', module: 'constraintlayout'
        exclude group: 'com.google.guava', module: 'guava'
        exclude group: 'com.rengwuxian.materialedittext', module: 'library'
        exclude group: 'org.smartregister', module: 'opensrp-client-chw-referral'
        exclude group: 'org.smartregister', module: 'opensrp-client-simprints'
        exclude group: 'org.smartregister', module: 'opensrp-client-core'
        exclude group: 'org.smartregister', module: 'opensrp-client-native-form'
        exclude group: 'org.smartregister', module: 'opensrp-client-family'
        exclude group: 'org.smartregister', module: 'opensrp-chw-family-planning'
    }

    implementation('org.smartregister:opensrp-chw-family-planning:1.0.18-SNAPSHOT') {
        transitive = true
        exclude group: 'org.smartregister', module: 'opensrp-client-chw-anc'
        exclude group: 'org.smartregister', module: 'opensrp-client-native-form'
        exclude group: 'org.smartregister', module: 'opensrp-client-core'
        exclude group: 'org.smartregister', module: 'opensrp-client-configurable-views'
        exclude group: 'org.smartregister', module: 'opensrp-client-immunization'
    }
    implementation 'androidx.appcompat:appcompat:1.0.2' //Do not upgrade to 1.1.0 due to compatibility issues
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.2' //Do not upgrade to 1.1.0 due to compatibility issues
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.multidex:multidex:2.0.0'
    implementation 'com.google.guava:guava:20.0'  //Do not upgrade to 24.jre-1 due to compatibility issues
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'org.mockito:mockito-android:3.0.0'

    implementation 'org.apache.commons:commons-lang3:1.3.2'
    implementation 'com.github.ybq:Android-SpinKit:1.4.0'
    implementation 'org.apache.httpcomponents:httpcore:4.4.10'

    implementation('org.smartregister:opensrp-client-core:1.8.31-DTREE-5-SNAPSHOT') {
        transitive = true
        exclude group: 'com.github.bmelnychuk', module: 'atv'
        exclude group: 'com.google.guava', module: 'guava'
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.android.support', module: 'design'
        exclude group: 'com.android.support', module: 'recyclerview-v7'
        exclude group: 'com.rengwuxian.materialedittext', module: 'library'
        exclude group: 'com.mcxiaoke.volley', module: 'library'
    }

    implementation 'com.mcxiaoke.volley:library:1.0.19'
    implementation 'de.hdodenhof:circleimageview:3.1.0'

    implementation ('org.smartregister:opensrp-client-family:1.2.43-DTREE-6-SNAPSHOT@aar'){
        transitive = true
        exclude group: 'org.smartregister', module: 'opensrp-client-core'
        exclude group: 'org.smartregister', module: 'opensrp-client-native-form'
        exclude group: 'org.smartregister', module: 'opensrp-client-configurable-views'
        exclude group: 'com.android.support', module: 'appcompat-v7'
    }

    //implementation ('org.smartregister:opensrp-client-simprints:1.26.0-SNAPSHOT'){
    implementation ('org.smartregister:opensrp-client-simprints-riddler:1.2.6-RESEARCH-SNAPSHOT'){
        transitive = true
        exclude group: 'org.smartregister', module: 'opensrp-client-family'
        exclude group: 'org.smartregister', module: 'opensrp-client-core'
    }
    
    implementation ('org.smartregister:opensrp-client-native-form:1.7.25-DTREE-4-SNAPSHOT@aar') {
        transitive = true
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.android.support', module: 'cardview-v7'
        exclude group: 'com.android.support', module: 'support-media-compat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'design'
        exclude group: 'io.ona.rdt-capture', module: 'lib'
        exclude group: 'org.smartregister', module: 'opensrp-client-simprints'
        exclude group: 'com.google.android.gms', module: 'play-services-vision-common'
    }

    implementation('org.smartregister:opensrp-chw-family-planning:1.0.18-SNAPSHOT') {
        transitive = true
        exclude group: 'org.smartregister', module: 'opensrp-client-chw-anc'
        exclude group: 'org.smartregister', module: 'opensrp-client-native-form'
        exclude group: 'org.smartregister', module: 'opensrp-client-core'
        exclude group: 'org.smartregister', module: 'opensrp-client-configurable-views'
        exclude group: 'org.smartregister', module: 'opensrp-client-immunization'
    }

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:3.1.0'
    testImplementation 'org.robolectric:robolectric:4.3.1'
    testImplementation 'org.robolectric:shadows-multidex:4.0.1'
    testImplementation 'org.robolectric:shadows-support-v4:3.4-rc2'
    testImplementation 'androidx.test:core:1.0.0'

    implementation platform('com.google.firebase:firebase-bom:26.1.1')
    implementation 'com.google.firebase:firebase-analytics:18.0.1'
    implementation('com.google.firebase:firebase-crashlytics:17.3.0') {
        transitive = true
    }

    implementation ("org.smartregister:android-p2p-sync:0.3.3-SNAPSHOT"){
        transitive = true
        exclude group: 'org.smartregister', module: 'opensrp-client-core'
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'org.smartregister', module: 'opensrp-client-native-form'
        exclude group: 'org.smartregister', module: 'opensrp-client-configurable-views'
        exclude group: 'com.rengwuxian.materialedittext', module: 'library'
    }
    implementation ("org.smartregister:opensrp-client-chw-referral:1.1.2-SNAPSHOT@aar"){
        transitive = true
        exclude group: 'org.smartregister', module: 'opensrp-client-core'
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'org.smartregister', module: 'opensrp-client-native-form'
        exclude group: 'org.smartregister', module: 'opensrp-client-configurable-views'
        exclude group: 'com.rengwuxian.materialedittext', module: 'library'
    }
    // PowerMock
    def powerMockVersion = '2.0.4'
    testImplementation "org.powermock:powermock-module-junit4:$powerMockVersion"
    testImplementation "org.powermock:powermock-module-junit4-rule:$powerMockVersion"
    testImplementation "org.powermock:powermock-api-mockito2:$powerMockVersion"
    testImplementation "org.powermock:powermock-classloading-xstream:$powerMockVersion"
}

def flavors = android.productFlavors.collect { flavor -> flavor.name }
if (!flavors) flavors.add('')

def testDependencies = []
flavors.each { productFlavorName ->
    testDependencies.add("test${productFlavorName.capitalize()}DebugUnitTest")
    testDependencies.add("create${productFlavorName.capitalize()}DebugCoverageReport")
}

// task jacocoTestReport(type: JacocoReport, dependsOn: testDependencies.take(2)) {
task jacocoTestReport(type: JacocoReport, dependsOn: [
        'testTogoDebugUnitTest', 'createTogoDebugCoverageReport',
        'testGuineaDebugUnitTest', 'createGuineaDebugCoverageReport',
        'testLiberiaDebugUnitTest', 'createLiberiaDebugCoverageReport',
        'testBaDebugUnitTest', 'createBaDebugCoverageReport'
]) {

    reports {
        xml {
            enabled true
        }
        html{
            enabled true
        }
    }

    getReports().getXml().setDestination(file("${buildDir}/reports/jacoco/jacocoRootReport/merged.xml"))
    getReports().getHtml().setDestination(file("${buildDir}/reports/jacoco/jacocoRootReport/html"))

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*', '**/*$ViewBinder*.*']
    def debugTree = fileTree(dir: "$project.buildDir/intermediates/javac/baDebug/classes/", excludes: fileFilter)
    def mainSrc = "$project.projectDir/src/main/java"

    sourceDirectories.setFrom(files([mainSrc]))
    classDirectories.setFrom(files([debugTree]))
    executionData.setFrom(fileTree(dir: project.buildDir, includes: [
            'jacoco/testBaDebugUnitTest.exec', 'outputs/code-coverage/connected/*coverage.ec'
    ]))
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}

coveralls {
    jacocoReportPath = "${buildDir}/reports/jacoco/jacocoRootReport/merged.xml"
    sourceDirs = ["$project.projectDir/src/main/java"]
}
